/* Global Variables */
// User will input a Zip code, and the city variable will hold the city name returned by the openweathermap api.
let city = null;
let icon = null
// Four variables to hold the elements that I will dynamically update with user info
const tempEle = document.getElementById('temp');
const tempIconEle = document.getElementById('temp-icon');
const dateEle = document.getElementById('date');
const contentEle = document.getElementById('content');
// Variables related to the openweathermap api
const baseUrl = 'https://api.openweathermap.org/data/2.5/weather?zip='
// Fake apiKey used as an example
const apiKey = '&appid=fabb1c8c7594800178e98367c09924a2';
// Create a new date instance dynamically with JS
let d = new Date();
// getMonth is zero indexed, so I added one.
let newDate = (d.getMonth()+1) +'.'+ d.getDate()+'.'+ d.getFullYear();

// Adding event listener when user clicks button
document.getElementById('generate').addEventListener('click',activate);

// Function that does three things
//  1. GETs info from Openweathermap API
// 2. POSTs the user information and info returned from the openweathermap API to the server as an object.
// 3. Gets the data object back from the server and uses it to update the DOM
function activate(e) {
    let zipCode = document.getElementById('zip').value;
    let feeling = document.getElementById('feelings').value;
    // If the user completed both fields then we proceed with async functions
    if (zipCode && feeling) {
        // Get weather information and user input and store it into an object
        getInfo(baseUrl,zipCode,apiKey, feeling)        
        .then(function(data) {
            // Post that object to the server
            postInfo('/projectInfo',{temp: Math.round(data.main.temp), feel:feeling, date: newDate });
        }) .then(function() {
            // Get the object back and post its information to the webpage
            getComplete('/info');
        });
    
        
    }

}
// Function that gets info from API, and turns it into an object for the server
const getInfo = async (baseURL, zipCode, apiKey, feeling) => {
    // Fetch call to api
    const res = await fetch(baseURL + zipCode + apiKey + '&units=imperial');
    // If information is returned, store it into a variable
    try {
        const data = await res.json();
        // Store the city name and a link to a picture that represents the weather.
        city = data.name
        icon = 'http://openweathermap.org/img/wn/' + data.weather[0].icon + '@2x.png';
        console.log(data);
        return data;
    } catch(error) {
        console.log('error', error);
    }
}


// Function that stores the user-generated object on the server-side
// Function takes in the path established in the server and the object generated by the user click
const postInfo = async ( url = '', dataObj = {})=>{

    const response = await fetch(url, {
    method: 'POST', 
    credentials: 'same-origin', 
    headers: {
        'Content-Type': 'application/json',
    },
    body: JSON.stringify(dataObj),         
  });

    try {
      const newData = await response.json();
      return newData;
    }catch(error) {
    console.log("error", error);
    }
};
// Function communicates with server to get the user-generated info that was stored in the projectData variable. It then posts that data to the webpage
const getComplete = async (url) => {
    const res = await fetch(url);
    try {
        const data = await res.json();
        contentEle.innerHTML =`Mood: ${data.feel}` ;
        tempEle.innerHTML = `Current temperature in ${city}: ${data.temp}Â°F`;
        tempIconEle.innerHTML = `<img src=${icon} alt='weather-icon'></img>`
        dateEle.innerHTML = `Today's Date: ${data.date}`;
        console.log(data);
        return data;
    } catch(error) {
        console.log('error', error);
    }
} 
